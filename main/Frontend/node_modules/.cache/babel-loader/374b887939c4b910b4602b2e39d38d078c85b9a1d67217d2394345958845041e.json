{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\dearbornskillshare\\\\main\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport logo from './logo.jpg';\nimport electronicsIcon from './electronics.png';\nimport appliancesIcon from './appliances.png';\nimport mechanicsIcon from './mech.png';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _posts$selectedCatego;\n  const [page, setPage] = useState('home');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState({});\n  const [comments, setComments] = useState({});\n  const [users, setUsers] = useState([]); // Admin user list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [replies, setReplies] = useState({});\n  const [profileImage, setProfileImage] = useState(null);\n  const adminCredentials = {\n    email: \"admin@example.com\",\n    password: \"adminpass\"\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfile(prevProfile => ({\n      ...prevProfile,\n      [name]: value\n    }));\n  };\n  const handleProfileImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImage(URL.createObjectURL(file));\n    }\n  };\n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    zipCode: '',\n    email: '',\n    aboutMe: ''\n  });\n  const handleAdminLogin = async (email, password) => {\n    if (email === adminCredentials.email && password === adminCredentials.password) {\n      alert(\"Welcome, Admin!\");\n      setPage(\"admin\");\n      setLoggedInUser({\n        name: \"Admin\",\n        isAdmin: true\n      });\n      return true;\n    } else {\n      alert(\"Invalid admin credentials.\");\n      return false;\n    }\n  };\n  const handleDeleteReply = async (replyId, commentId) => {\n    const token = localStorage.getItem('token'); // Auth token\n    try {\n      // Make a DELETE request to the backend\n      await axios.delete(`http://localhost:5000/api/replies/${replyId}`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Corrected template literal syntax\n        }\n      });\n\n      // Update the replies state to remove the deleted reply\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: prevReplies[commentId].filter(reply => reply.id !== replyId)\n      }));\n      alert('Reply deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting reply:', error.message);\n      alert('Failed to delete reply.');\n    }\n  };\n  const fetchReplies = async commentId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/replies/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching replies:', error.message);\n    }\n  };\n  const handleAddReply = async (commentId, replyText) => {\n    if (!replyText.trim()) return alert('Reply cannot be empty.');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/replies', {\n        commentId,\n        content: replyText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newReply = response.data;\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: [...(prevReplies[commentId] || []), newReply]\n      }));\n    } catch (error) {\n      console.error('Error adding reply:', error.message);\n      alert('Failed to add reply.');\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token); // Correct usage\n        setLoggedInUser(decoded);\n        setIsLoggedIn(true);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/login`, {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      const decoded = jwtDecode(token); // Correct usage\n      setLoggedInUser(decoded);\n      setIsLoggedIn(true);\n      return true;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error logging in:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to log in. Please check your credentials.');\n      return false;\n    }\n  };\n  const handleDeleteComment = async (commentId, postId) => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:5000/api/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update the comments state\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(comment => comment.id !== commentId)\n      }));\n      alert('Comment deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting comment:', error.message);\n      alert('Failed to delete comment.');\n    }\n  };\n\n  // Fetch users for Admin Dashboard\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Retrieve the JWT token\n      const response = await axios.get(`http://localhost:5000/api/users`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Include Authorization header\n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      alert('Failed to load users.');\n    }\n  };\n  useEffect(() => {\n    if (page === 'category' && selectedCategory) {\n      fetchPosts(selectedCategory);\n    }\n  }, [page, selectedCategory]);\n  const handleProfileSave = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('firstName', profile.firstName);\n    formData.append('lastName', profile.lastName);\n    formData.append('zipCode', profile.zipCode);\n    formData.append('email', profile.email);\n    formData.append('aboutMe', profile.aboutMe);\n    if (profileImage) {\n      const blob = await fetch(profileImage).then(res => res.blob());\n      formData.append('profileImage', blob, 'profile.jpg');\n    }\n    const token = localStorage.getItem('token');\n    try {\n      await axios.post(`http://localhost:5000/api/profile`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Re-fetch updated user data\n      const response = await axios.get(`http://localhost:5000/api/users/${loggedInUser.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLoggedInUser(response.data); // Update user state with new data\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error('Error updating profile:', error.message);\n      alert('Failed to update profile.');\n    }\n  };\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/users/${loggedInUser.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setProfile({\n          firstName: response.data.name.split(' ')[0] || '',\n          lastName: response.data.name.split(' ')[1] || '',\n          zipCode: response.data.zipcode || '',\n          email: response.data.email || '',\n          aboutMe: response.data.aboutMe || ''\n        });\n        setProfileImage(response.data.profileImage || '/uploads/logo.jpg');\n      } catch (error) {\n        console.error('Error fetching profile:', error.message);\n      }\n    };\n    if (loggedInUser) fetchUserProfile();\n  }, [loggedInUser]);\n\n  // Fetch comments for all posts in the selected category\n  const fetchCommentsForPosts = async categoryPosts => {\n    const token = localStorage.getItem('token');\n    try {\n      const allComments = {};\n      for (const post of categoryPosts) {\n        const response = await axios.get(`http://localhost:5000/api/comments/${post.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        allComments[post.id] = response.data;\n      }\n      setComments(allComments); // Update comments state with all comments\n    } catch (error) {\n      console.error('Error fetching comments:', error.message);\n    }\n  };\n\n  // Extend fetchPosts to fetch comments as well\n  const fetchPosts = async category => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/posts/${category}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const categoryPosts = response.data;\n      setPosts(prevPosts => ({\n        ...prevPosts,\n        [category]: categoryPosts\n      }));\n\n      // Fetch comments for all posts in the category\n      fetchCommentsForPosts(categoryPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n      alert('Failed to load posts.');\n    }\n  };\n  const [showReplies, setShowReplies] = useState({});\n  const toggleReplies = commentId => {\n    setShowReplies(prev => ({\n      ...prev,\n      [commentId]: !prev[commentId]\n    }));\n  };\n  useEffect(() => {\n    if (page === 'admin') {\n      fetchUsers();\n    } else if (page === 'category' && selectedCategory) {\n      fetchPosts(selectedCategory);\n    }\n  }, [page, selectedCategory]);\n  useEffect(() => {\n    if (page === 'category' && selectedCategory) {\n      fetchPosts(selectedCategory);\n    }\n  }, [page, selectedCategory]);\n  useEffect(() => {\n    const preloadPosts = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/posts`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(response.data.reduce((acc, post) => {\n          acc[post.category] = acc[post.category] || [];\n          acc[post.category].push(post);\n          return acc;\n        }, {}));\n      } catch (error) {\n        console.error('Error preloading posts:', error.message);\n      }\n    };\n    if (isLoggedIn) {\n      preloadPosts();\n    }\n  }, [isLoggedIn]);\n\n  // Toggle user activation\n  const toggleUserActivation = async (userId, currentStatus) => {\n    try {\n      await axios.patch(`http://localhost:5000/api/users/${userId}`, {\n        isActive: !currentStatus // Toggle status\n      });\n      setUsers(prevUsers => prevUsers.map(user => user.id === userId ? {\n        ...user,\n        isActive: !currentStatus\n      } : user));\n      alert(`User account ${!currentStatus ? 'activated' : 'deactivated'} successfully!`);\n    } catch (error) {\n      console.error('Error updating user status:', error);\n      alert('Failed to update user status.');\n    }\n  };\n  const handleNavigate = targetPage => {\n    if (targetPage === 'admin' && (!loggedInUser || !loggedInUser.isAdmin)) {\n      setPage('adminLogin'); // Redirect to admin login if not authenticated\n    } else {\n      setPage(targetPage); // Navigate to the target page\n    }\n  };\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setPage('category');\n  };\n  const handleModalToggle = () => setModalOpen(!isModalOpen);\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (!loggedInUser) {\n      alert('You must be logged in to post.');\n      return;\n    }\n    const postContent = e.target.elements['postContent'].value;\n    const files = e.target.elements['fileUpload'].files;\n    if (!postContent.trim()) return alert('Post content cannot be empty!');\n    const formData = new FormData();\n    formData.append('category', selectedCategory);\n    formData.append('content', postContent);\n    Array.from(files).forEach(file => formData.append('files', file));\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`http://localhost:5000/api/posts`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // Add token for authenticated requests\n          'Content-Type': 'multipart/form-data' // Required for file uploads\n        }\n      });\n      setPosts(prevPosts => ({\n        ...prevPosts,\n        [selectedCategory]: [...(prevPosts[selectedCategory] || []), {\n          ...response.data,\n          date: new Date().toLocaleDateString()\n        }]\n      }));\n      setModalOpen(false);\n      e.target.reset();\n    } catch (error) {\n      console.error('Error saving post:', error);\n      alert('Failed to save post.');\n    }\n  };\n  const handleImageNav = (postId, category, direction) => {\n    setCurrentImageIndex(prevState => {\n      var _posts$category;\n      const newState = {\n        ...prevState\n      };\n      const totalImages = (_posts$category = posts[category]) === null || _posts$category === void 0 ? void 0 : _posts$category.find(post => post.id === postId).files.length;\n      const newIndex = (newState[postId] || 0) + direction;\n      newState[postId] = (newIndex + totalImages) % totalImages;\n      return newState;\n    });\n  };\n  const handleAddComment = async (postId, category, commentText) => {\n    if (!commentText.trim()) return alert('Comment cannot be empty.');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`http://localhost:5000/api/comments`, {\n        postId,\n        content: commentText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newComment = response.data;\n\n      // Update the comments state\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newComment]\n      }));\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n      alert('Failed to add comment.');\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/comments/${postId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching comments:', error.message);\n      alert('Failed to fetch comments.');\n    }\n  };\n  const handleDeletePost = async (postId, category) => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\n    if (!confirmDelete) return;\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:5000/api/posts/${postId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update posts in the frontend\n      setPosts(prevPosts => ({\n        ...prevPosts,\n        [category]: prevPosts[category].filter(post => post.id !== postId)\n      }));\n      alert('Post deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      alert('Failed to delete post.');\n    }\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const selectedSkills = Array.from(formData.getAll('skills'));\n\n    // Fill skill1, skill2, skill3, and assign 'None' if fewer than three skills are selected\n    const [skill1, skill2, skill3] = [selectedSkills[0] || 'None', selectedSkills[1] || 'None', selectedSkills[2] || 'None'];\n    const userData = {\n      name: formData.get('name'),\n      email: formData.get('email'),\n      password: formData.get('password'),\n      zipcode: formData.get('zipcode'),\n      skill1,\n      skill2,\n      skill3\n    };\n    try {\n      await axios.post(`http://localhost:5000/api/users`, userData);\n      alert('User registered successfully!');\n      setPage('community');\n    } catch (error) {\n      console.error('Error during sign-up:', error);\n      alert('Failed to register user.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-link\",\n              onClick: () => handleNavigate('home'),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-link\",\n              onClick: () => handleNavigate('about'),\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-link\",\n              onClick: () => handleNavigate('community'),\n              children: \"Community\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 9\n          }, this), loggedInUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Welcome, \", loggedInUser.name, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"nav-link\",\n                onClick: handleLogout,\n                children: \"Log Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 3\n    }, this), page === 'home' && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"SkillShare Dearborn Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Register as a Resident or Log In Below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleNavigate('signup'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleNavigate('login'),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 5\n    }, this), page === 'about' && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"about-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to SkillShare Dearborn, a platform dedicated to sustainability and skill-sharing. Join us to learn, collaborate, and repair!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => handleNavigate('home'),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 5\n    }, this), page === 'community' && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"community-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Community Repair Forums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedCategory('Mechanics'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: mechanicsIcon,\n            alt: \"Mechanics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Mechanics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedCategory('Electronics'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: electronicsIcon,\n            alt: \"Electronics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Electronics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedCategory('Home Appliances'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: appliancesIcon,\n            alt: \"Home Appliances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Home Appliances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 5\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"category-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedCategory, \" Forum\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 7\n      }, this), (_posts$selectedCatego = posts[selectedCategory]) === null || _posts$selectedCatego === void 0 ? void 0 : _posts$selectedCatego.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"By \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), post.userId === (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 48\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleModalToggle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 7\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddPost,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"postContent\",\n            placeholder: \"Share your thoughts...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleModalToggle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"mnIYFUizZ4ZFSAaLxxkG8fVLScc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","electronicsIcon","appliancesIcon","mechanicsIcon","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_posts$selectedCatego","page","setPage","selectedCategory","setSelectedCategory","isModalOpen","setModalOpen","posts","setPosts","isLoggedIn","setIsLoggedIn","currentImageIndex","setCurrentImageIndex","comments","setComments","users","setUsers","loggedInUser","setLoggedInUser","replies","setReplies","profileImage","setProfileImage","adminCredentials","email","password","handleInputChange","e","name","value","target","setProfile","prevProfile","handleProfileImageUpload","file","files","URL","createObjectURL","profile","firstName","lastName","zipCode","aboutMe","handleAdminLogin","alert","isAdmin","handleDeleteReply","replyId","commentId","token","localStorage","getItem","delete","headers","Authorization","prevReplies","filter","reply","id","error","console","message","fetchReplies","response","get","data","handleAddReply","replyText","trim","post","content","newReply","decoded","handleLogin","setItem","_error$response","_error$response2","_error$response2$data","handleDeleteComment","postId","prevComments","comment","fetchUsers","fetchPosts","handleProfileSave","preventDefault","formData","FormData","append","blob","fetch","then","res","fetchUserProfile","split","zipcode","fetchCommentsForPosts","categoryPosts","allComments","category","prevPosts","showReplies","setShowReplies","toggleReplies","prev","preloadPosts","reduce","acc","push","toggleUserActivation","userId","currentStatus","patch","isActive","prevUsers","map","user","handleNavigate","targetPage","handleCategoryClick","handleModalToggle","handleFormSubmit","postContent","elements","Array","from","forEach","date","Date","toLocaleDateString","reset","handleImageNav","direction","prevState","_posts$category","newState","totalImages","find","length","newIndex","handleAddComment","commentText","newComment","fetchComments","handleDeletePost","confirmDelete","window","confirm","handleSignUp","selectedSkills","getAll","skill1","skill2","skill3","userData","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","src","alt","username","onSubmit","handleAddPost","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/dearbornskillshare/main/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport logo from './logo.jpg';\nimport electronicsIcon from './electronics.png';\nimport appliancesIcon from './appliances.png';\nimport mechanicsIcon from './mech.png';\nimport { jwtDecode } from 'jwt-decode';\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState({});\n  const [comments, setComments] = useState({});\n  const [users, setUsers] = useState([]); // Admin user list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [replies, setReplies] = useState({});\n  const [profileImage, setProfileImage] = useState(null);\n\n\n  const adminCredentials = {\n    email: \"admin@example.com\",\n    password: \"adminpass\",\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfile((prevProfile) => ({ ...prevProfile, [name]: value }));\n  };\n\n  \n  const handleProfileImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImage(URL.createObjectURL(file));\n    }\n  };\n\n  \n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    zipCode: '',\n    email: '',\n    aboutMe: '',\n  });\n  \n  const handleAdminLogin = async (email, password) => {\n    if (email === adminCredentials.email && password === adminCredentials.password) {\n      alert(\"Welcome, Admin!\");\n      setPage(\"admin\");\n      setLoggedInUser({ name: \"Admin\", isAdmin: true });\n      return true;\n    } else {\n      alert(\"Invalid admin credentials.\");\n      return false;\n    }\n  };\n  \n  const handleDeleteReply = async (replyId, commentId) => {\n    const token = localStorage.getItem('token'); // Auth token\n    try {\n      // Make a DELETE request to the backend\n      await axios.delete(`http://localhost:5000/api/replies/${replyId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Corrected template literal syntax\n        },\n      });\n      \n  \n      // Update the replies state to remove the deleted reply\n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: prevReplies[commentId].filter((reply) => reply.id !== replyId),\n      }));\n  \n      alert('Reply deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting reply:', error.message);\n      alert('Failed to delete reply.');\n    }\n  };\n\n  \n  const fetchReplies = async (commentId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/replies/${commentId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: response.data,\n      }));\n    } catch (error) {\n      console.error('Error fetching replies:', error.message);\n    }\n  };\n\n  const handleAddReply = async (commentId, replyText) => {\n    if (!replyText.trim()) return alert('Reply cannot be empty.');\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(\n        'http://localhost:5000/api/replies',\n        { commentId, content: replyText },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n  \n      const newReply = response.data;\n  \n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: [...(prevReplies[commentId] || []), newReply],\n      }));\n    } catch (error) {\n      console.error('Error adding reply:', error.message);\n      alert('Failed to add reply.');\n    }\n  };\n  \n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token); // Correct usage\n        setLoggedInUser(decoded);\n        setIsLoggedIn(true);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  \n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/login`, { email, password });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n  \n      const decoded = jwtDecode(token); // Correct usage\n      setLoggedInUser(decoded);\n      setIsLoggedIn(true);\n  \n      return true;\n    } catch (error) {\n      console.error('Error logging in:', error.response?.data || error.message);\n      alert(error.response?.data?.error || 'Failed to log in. Please check your credentials.');\n      return false;\n    }\n  };\n  \n  const handleDeleteComment = async (commentId, postId) => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:5000/api/comments/${commentId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      // Update the comments state\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter((comment) => comment.id !== commentId),\n      }));\n  \n      alert('Comment deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting comment:', error.message);\n      alert('Failed to delete comment.');\n    }\n  };\n  \n  \n  // Fetch users for Admin Dashboard\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Retrieve the JWT token\n      const response = await axios.get(`http://localhost:5000/api/users`, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include Authorization header\n        },\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      alert('Failed to load users.');\n    }\n  };\n  \n  useEffect(() => {\n    if (page === 'category' && selectedCategory) {\n      fetchPosts(selectedCategory);\n    }\n  }, [page, selectedCategory]);\n  \n\n  const handleProfileSave = async (e) => {\n    e.preventDefault();\n  \n    const formData = new FormData();\n    formData.append('firstName', profile.firstName);\n    formData.append('lastName', profile.lastName);\n    formData.append('zipCode', profile.zipCode);\n    formData.append('email', profile.email);\n    formData.append('aboutMe', profile.aboutMe);\n  \n    if (profileImage) {\n      const blob = await fetch(profileImage).then((res) => res.blob());\n      formData.append('profileImage', blob, 'profile.jpg');\n    }\n  \n    const token = localStorage.getItem('token');\n    try {\n      await axios.post(`http://localhost:5000/api/profile`, formData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      // Re-fetch updated user data\n      const response = await axios.get(`http://localhost:5000/api/users/${loggedInUser.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setLoggedInUser(response.data); // Update user state with new data\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error('Error updating profile:', error.message);\n      alert('Failed to update profile.');\n    }\n  };\n  \n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/users/${loggedInUser.id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setProfile({\n          firstName: response.data.name.split(' ')[0] || '',\n          lastName: response.data.name.split(' ')[1] || '',\n          zipCode: response.data.zipcode || '',\n          email: response.data.email || '',\n          aboutMe: response.data.aboutMe || '',\n        });\n        setProfileImage(response.data.profileImage || '/uploads/logo.jpg');\n      } catch (error) {\n        console.error('Error fetching profile:', error.message);\n      }\n    };\n  \n    if (loggedInUser) fetchUserProfile();\n  }, [loggedInUser]);\n  \n  \n  // Fetch comments for all posts in the selected category\n  const fetchCommentsForPosts = async (categoryPosts) => {\n    const token = localStorage.getItem('token');\n    try {\n      const allComments = {};\n      for (const post of categoryPosts) {\n        const response = await axios.get(`http://localhost:5000/api/comments/${post.id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        allComments[post.id] = response.data;\n      }\n      setComments(allComments); // Update comments state with all comments\n    } catch (error) {\n      console.error('Error fetching comments:', error.message);\n    }\n  };\n  \n  // Extend fetchPosts to fetch comments as well\n  const fetchPosts = async (category) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/posts/${category}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const categoryPosts = response.data;\n  \n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        [category]: categoryPosts,\n      }));\n  \n      // Fetch comments for all posts in the category\n      fetchCommentsForPosts(categoryPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n      alert('Failed to load posts.');\n    }\n  };\n  \n  const [showReplies, setShowReplies] = useState({});\n\nconst toggleReplies = (commentId) => {\n  setShowReplies((prev) => ({\n    ...prev,\n    [commentId]: !prev[commentId],\n  }));\n};\n\n\nuseEffect(() => {\n  if (page === 'admin') {\n    fetchUsers();\n  } else if (page === 'category' && selectedCategory) {\n    fetchPosts(selectedCategory);\n  }\n}, [page, selectedCategory]);\n\nuseEffect(() => {\n  if (page === 'category' && selectedCategory) {\n    fetchPosts(selectedCategory);\n  }\n}, [page, selectedCategory]);\n\nuseEffect(() => {\n  const preloadPosts = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/posts`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setPosts(response.data.reduce((acc, post) => {\n        acc[post.category] = acc[post.category] || [];\n        acc[post.category].push(post);\n        return acc;\n      }, {}));\n    } catch (error) {\n      console.error('Error preloading posts:', error.message);\n    }\n  };\n\n  if (isLoggedIn) {\n    preloadPosts();\n  }\n}, [isLoggedIn]);\n\n\n  // Toggle user activation\n  const toggleUserActivation = async (userId, currentStatus) => {\n    try {\n      await axios.patch(`http://localhost:5000/api/users/${userId}`, {\n        isActive: !currentStatus, // Toggle status\n      });\n  \n      setUsers((prevUsers) =>\n        prevUsers.map((user) =>\n          user.id === userId ? { ...user, isActive: !currentStatus } : user\n        )\n      );\n      alert(`User account ${!currentStatus ? 'activated' : 'deactivated'} successfully!`);\n    } catch (error) {\n      console.error('Error updating user status:', error);\n      alert('Failed to update user status.');\n    }\n  };\n\n\n  const handleNavigate = (targetPage) => {\n    if (targetPage === 'admin' && (!loggedInUser || !loggedInUser.isAdmin)) {\n      setPage('adminLogin'); // Redirect to admin login if not authenticated\n    } else {\n      setPage(targetPage); // Navigate to the target page\n    }\n  };\n  \n\n  const handleCategoryClick = (category) => {\n    setSelectedCategory(category);\n    setPage('category');\n  };\n\n  const handleModalToggle = () => setModalOpen(!isModalOpen);\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!loggedInUser) {\n        alert('You must be logged in to post.');\n        return;\n    }\n\n    const postContent = e.target.elements['postContent'].value;\n    const files = e.target.elements['fileUpload'].files;\n\n    if (!postContent.trim()) return alert('Post content cannot be empty!');\n\n    const formData = new FormData();\n    formData.append('category', selectedCategory);\n    formData.append('content', postContent);\n    Array.from(files).forEach((file) => formData.append('files', file));\n\n    try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(`http://localhost:5000/api/posts`, formData, {\n            headers: {\n                Authorization: `Bearer ${token}`, // Add token for authenticated requests\n                'Content-Type': 'multipart/form-data', // Required for file uploads\n            },\n        });\n        setPosts((prevPosts) => ({\n            ...prevPosts,\n            [selectedCategory]: [\n                ...(prevPosts[selectedCategory] || []),\n                { ...response.data, date: new Date().toLocaleDateString() },\n            ],\n        }));\n        setModalOpen(false);\n        e.target.reset();\n    } catch (error) {\n        console.error('Error saving post:', error);\n        alert('Failed to save post.');\n    }\n};\n\n\n  \n\n  const handleImageNav = (postId, category, direction) => {\n    setCurrentImageIndex((prevState) => {\n      const newState = { ...prevState };\n      const totalImages = posts[category]?.find((post) => post.id === postId).files.length;\n      const newIndex = (newState[postId] || 0) + direction;\n      newState[postId] = (newIndex + totalImages) % totalImages;\n      return newState;\n    });\n  };\n\n  const handleAddComment = async (postId, category, commentText) => {\n    if (!commentText.trim()) return alert('Comment cannot be empty.');\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(\n        `http://localhost:5000/api/comments`,\n        { postId, content: commentText },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n  \n      const newComment = response.data;\n  \n      // Update the comments state\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newComment],\n      }));\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n      alert('Failed to add comment.');\n    }\n  };\n  \n  const fetchComments = async (postId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/comments/${postId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: response.data,\n      }));\n    } catch (error) {\n      console.error('Error fetching comments:', error.message);\n      alert('Failed to fetch comments.');\n    }\n  };\n  \n  const handleDeletePost = async (postId, category) => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\n    if (!confirmDelete) return;\n\n    const token = localStorage.getItem('token');\n    try {\n        await axios.delete(`http://localhost:5000/api/posts/${postId}`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        // Update posts in the frontend\n        setPosts((prevPosts) => ({\n            ...prevPosts,\n            [category]: prevPosts[category].filter((post) => post.id !== postId),\n        }));\n\n        alert('Post deleted successfully.');\n    } catch (error) {\n        console.error('Error deleting post:', error);\n        alert('Failed to delete post.');\n    }\n};\n\n\nconst handleSignUp = async (e) => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const selectedSkills = Array.from(formData.getAll('skills'));\n\n  // Fill skill1, skill2, skill3, and assign 'None' if fewer than three skills are selected\n  const [skill1, skill2, skill3] = [\n    selectedSkills[0] || 'None',\n    selectedSkills[1] || 'None',\n    selectedSkills[2] || 'None',\n  ];\n\n  const userData = {\n    name: formData.get('name'),\n    email: formData.get('email'),\n    password: formData.get('password'),\n    zipcode: formData.get('zipcode'),\n    skill1,\n    skill2,\n    skill3,\n  };\n\n  try {\n    await axios.post(`http://localhost:5000/api/users`, userData);\n    alert('User registered successfully!');\n    setPage('community');\n  } catch (error) {\n    console.error('Error during sign-up:', error);\n    alert('Failed to register user.');\n  }\n};\n\nreturn (\n  <div className=\"app\">\n  {/* Navbar */}\n  <header className=\"header\">\n    <nav className=\"navbar\">\n      <ul>\n        <li><button className=\"nav-link\" onClick={() => handleNavigate('home')}>Home</button></li>\n        <li><button className=\"nav-link\" onClick={() => handleNavigate('about')}>About</button></li>\n        <li><button className=\"nav-link\" onClick={() => handleNavigate('community')}>Community</button></li>\n        {loggedInUser && (\n          <>\n            <li>Welcome, {loggedInUser.name}!</li>\n            <li><button className=\"nav-link\" onClick={handleLogout}>Log Out</button></li>\n          </>\n        )}\n      </ul>\n    </nav>\n  </header>\n\n  {/* Home Page */}\n  {page === 'home' && (\n    <main className=\"main-content\">\n      <div className=\"logo\">\n        <img src={logo} alt=\"SkillShare Dearborn Logo\" />\n      </div>\n      <p>Register as a Resident or Log In Below:</p>\n      <div className=\"buttons\">\n        <button className=\"button\" onClick={() => handleNavigate('signup')}>Register</button>\n        <button className=\"button\" onClick={() => handleNavigate('login')}>Log In</button>\n      </div>\n    </main>\n  )}\n\n  {/* About Page */}\n  {page === 'about' && (\n    <main className=\"about-page\">\n      <h1>About Us</h1>\n      <p>\n        Welcome to SkillShare Dearborn, a platform dedicated to sustainability and skill-sharing.\n        Join us to learn, collaborate, and repair!\n      </p>\n      <button className=\"button\" onClick={() => handleNavigate('home')}>Back</button>\n    </main>\n  )}\n\n  {/* Community Page */}\n  {page === 'community' && (\n    <main className=\"community-content\">\n      <h1>Community Repair Forums</h1>\n      <div className=\"community-categories\">\n        <div onClick={() => setSelectedCategory('Mechanics')}>\n          <img src={mechanicsIcon} alt=\"Mechanics\" />\n          <p>Mechanics</p>\n        </div>\n        <div onClick={() => setSelectedCategory('Electronics')}>\n          <img src={electronicsIcon} alt=\"Electronics\" />\n          <p>Electronics</p>\n        </div>\n        <div onClick={() => setSelectedCategory('Home Appliances')}>\n          <img src={appliancesIcon} alt=\"Home Appliances\" />\n          <p>Home Appliances</p>\n        </div>\n      </div>\n    </main>\n  )}\n\n  {/* Category Page */}\n  {selectedCategory && (\n    <main className=\"category-content\">\n      <h2>{selectedCategory} Forum</h2>\n      {posts[selectedCategory]?.map((post) => (\n        <div key={post.id} className=\"post\">\n          <p>{post.content}</p>\n          <span>By {post.username}</span>\n          {post.userId === loggedInUser?.id && <button>Delete</button>}\n        </div>\n      ))}\n      <button className=\"add-button\" onClick={handleModalToggle}>+</button>\n\n      {/* Add Post Modal */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <form onSubmit={handleAddPost}>\n            <textarea name=\"postContent\" placeholder=\"Share your thoughts...\" required />\n            <button type=\"submit\">Post</button>\n            <button type=\"button\" onClick={handleModalToggle}>Close</button>\n          </form>\n        </div>\n      )}\n    </main>\n  )}\n</div>\n);\n}\n\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}