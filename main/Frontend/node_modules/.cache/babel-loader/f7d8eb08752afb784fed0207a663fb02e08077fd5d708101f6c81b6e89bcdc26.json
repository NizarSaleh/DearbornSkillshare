{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\dearbornskillshare\\\\main\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport logo from './logo.jpg';\nimport electronicsIcon from './electronics.png';\nimport appliancesIcon from './appliances.png';\nimport mechanicsIcon from './mech.png';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState({});\n  const [comments, setComments] = useState({});\n  const [users, setUsers] = useState([]); // Admin user list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [replies, setReplies] = useState({});\n  const [profileImage, setProfileImage] = useState(null);\n  const adminCredentials = {\n    email: \"admin@example.com\",\n    password: \"adminpass\"\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfile(prevProfile => ({\n      ...prevProfile,\n      [name]: value\n    }));\n  };\n  const handleProfileImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImage(URL.createObjectURL(file));\n    }\n  };\n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    zipCode: '',\n    email: '',\n    aboutMe: ''\n  });\n  const handleAdminLogin = async (email, password) => {\n    if (email === adminCredentials.email && password === adminCredentials.password) {\n      alert(\"Welcome, Admin!\");\n      setPage(\"admin\");\n      setLoggedInUser({\n        name: \"Admin\",\n        isAdmin: true\n      });\n      return true;\n    } else {\n      alert(\"Invalid admin credentials.\");\n      return false;\n    }\n  };\n  const handleDeleteReply = async (replyId, commentId) => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:5000/api/replies/${replyId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: prevReplies[commentId].filter(reply => reply.id !== replyId)\n      }));\n      alert('Reply deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting reply:', error.message);\n      alert('Failed to delete reply.');\n    }\n  };\n  const fetchReplies = async commentId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/replies/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching replies:', error.message);\n    }\n  };\n  const handleAddReply = async (commentId, replyText) => {\n    if (!replyText.trim()) return alert('Reply cannot be empty.');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/replies', {\n        commentId,\n        content: replyText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newReply = response.data;\n      setReplies(prevReplies => ({\n        ...prevReplies,\n        [commentId]: [...(prevReplies[commentId] || []), newReply]\n      }));\n    } catch (error) {\n      console.error('Error adding reply:', error.message);\n      alert('Failed to add reply.');\n    }\n  };\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      const decoded = jwtDecode(token);\n      setLoggedInUser(decoded);\n      setIsLoggedIn(true);\n      return true;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error logging in:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to log in. Please check your credentials.');\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-link\",\n              onClick: () => setPage('home'),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-link\",\n              onClick: () => setPage('profile'),\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), page === 'home' && /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"SkillShare Dearborn Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to SkillShare Dearborn!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i2OLVz86YeWlBYicsoncKuKhiBo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","electronicsIcon","appliancesIcon","mechanicsIcon","jwtDecode","jsxDEV","_jsxDEV","App","_s","page","setPage","selectedCategory","setSelectedCategory","isModalOpen","setModalOpen","posts","setPosts","isLoggedIn","setIsLoggedIn","currentImageIndex","setCurrentImageIndex","comments","setComments","users","setUsers","loggedInUser","setLoggedInUser","replies","setReplies","profileImage","setProfileImage","adminCredentials","email","password","handleInputChange","e","name","value","target","setProfile","prevProfile","handleProfileImageUpload","file","files","URL","createObjectURL","profile","firstName","lastName","zipCode","aboutMe","handleAdminLogin","alert","isAdmin","handleDeleteReply","replyId","commentId","token","localStorage","getItem","delete","headers","Authorization","prevReplies","filter","reply","id","error","console","message","fetchReplies","response","get","data","handleAddReply","replyText","trim","post","content","newReply","handleLogin","setItem","decoded","_error$response","_error$response2","_error$response2$data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/dearbornskillshare/main/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport logo from './logo.jpg';\nimport electronicsIcon from './electronics.png';\nimport appliancesIcon from './appliances.png';\nimport mechanicsIcon from './mech.png';\nimport { jwtDecode } from 'jwt-decode';\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState({});\n  const [comments, setComments] = useState({});\n  const [users, setUsers] = useState([]); // Admin user list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [replies, setReplies] = useState({});\n  const [profileImage, setProfileImage] = useState(null);\n\n  const adminCredentials = {\n    email: \"admin@example.com\",\n    password: \"adminpass\",\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfile((prevProfile) => ({ ...prevProfile, [name]: value }));\n  };\n\n  const handleProfileImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImage(URL.createObjectURL(file));\n    }\n  };\n\n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    zipCode: '',\n    email: '',\n    aboutMe: '',\n  });\n\n  const handleAdminLogin = async (email, password) => {\n    if (email === adminCredentials.email && password === adminCredentials.password) {\n      alert(\"Welcome, Admin!\");\n      setPage(\"admin\");\n      setLoggedInUser({ name: \"Admin\", isAdmin: true });\n      return true;\n    } else {\n      alert(\"Invalid admin credentials.\");\n      return false;\n    }\n  };\n\n  const handleDeleteReply = async (replyId, commentId) => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`http://localhost:5000/api/replies/${replyId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: prevReplies[commentId].filter((reply) => reply.id !== replyId),\n      }));\n\n      alert('Reply deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting reply:', error.message);\n      alert('Failed to delete reply.');\n    }\n  };\n\n  const fetchReplies = async (commentId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/replies/${commentId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: response.data,\n      }));\n    } catch (error) {\n      console.error('Error fetching replies:', error.message);\n    }\n  };\n\n  const handleAddReply = async (commentId, replyText) => {\n    if (!replyText.trim()) return alert('Reply cannot be empty.');\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(\n        'http://localhost:5000/api/replies',\n        { commentId, content: replyText },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      const newReply = response.data;\n\n      setReplies((prevReplies) => ({\n        ...prevReplies,\n        [commentId]: [...(prevReplies[commentId] || []), newReply],\n      }));\n    } catch (error) {\n      console.error('Error adding reply:', error.message);\n      alert('Failed to add reply.');\n    }\n  };\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', { email, password });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n\n      const decoded = jwtDecode(token);\n      setLoggedInUser(decoded);\n      setIsLoggedIn(true);\n\n      return true;\n    } catch (error) {\n      console.error('Error logging in:', error.response?.data || error.message);\n      alert(error.response?.data?.error || 'Failed to log in. Please check your credentials.');\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <nav className=\"navbar\">\n          <ul>\n            <li><button className=\"nav-link\" onClick={() => setPage('home')}>Home</button></li>\n            <li><button className=\"nav-link\" onClick={() => setPage('profile')}>Profile</button></li>\n          </ul>\n        </nav>\n      </header>\n      {page === 'home' && (\n        <main className=\"main-content\">\n          <div className=\"logo\">\n            <img src={logo} alt=\"SkillShare Dearborn Logo\" />\n          </div>\n          <p>Welcome to SkillShare Dearborn!</p>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}